var annotated_dup =
[
    [ "aba_decay", "classaba__decay.html", "classaba__decay" ],
    [ "ball_berry_module", "classball__berry__module.html", "classball__berry__module" ],
    [ "biomass_leaf_n_limitation", "classbiomass__leaf__n__limitation.html", "classbiomass__leaf__n__limitation" ],
    [ "buck_swvp", "classbuck__swvp.html", "classbuck__swvp" ],
    [ "bucket_soil_drainage", "classbucket__soil__drainage.html", "classbucket__soil__drainage" ],
    [ "c3_assimilation", "classc3__assimilation.html", "classc3__assimilation" ],
    [ "c3_canopy", "classc3__canopy.html", "classc3__canopy" ],
    [ "c3_leaf_photosynthesis", "classc3__leaf__photosynthesis.html", "classc3__leaf__photosynthesis" ],
    [ "c3_str", "structc3__str.html", "structc3__str" ],
    [ "c4_assimilation", "classc4__assimilation.html", "classc4__assimilation" ],
    [ "c4_canopy", "classc4__canopy.html", "classc4__canopy" ],
    [ "c4_leaf_photosynthesis", "classc4__leaf__photosynthesis.html", "classc4__leaf__photosynthesis" ],
    [ "c4_str", "structc4__str.html", "structc4__str" ],
    [ "Can_Str", "struct_can___str.html", "struct_can___str" ],
    [ "collatz_result", "structcollatz__result.html", "structcollatz__result" ],
    [ "crop_phenology", "structcrop__phenology.html", "structcrop__phenology" ],
    [ "dbp_str", "structdbp__str.html", "structdbp__str" ],
    [ "development_index", "classdevelopment__index.html", "classdevelopment__index" ],
    [ "empty_senescence", "classempty__senescence.html", "classempty__senescence" ],
    [ "ET_Str", "struct_e_t___str.html", "struct_e_t___str" ],
    [ "example_model_mass_gain", "classexample__model__mass__gain.html", "classexample__model__mass__gain" ],
    [ "example_model_partitioning", "classexample__model__partitioning.html", "classexample__model__partitioning" ],
    [ "fake_solar", "classfake__solar.html", "classfake__solar" ],
    [ "frostParms", "structfrost_parms.html", "structfrost_parms" ],
    [ "FvCB", "class_fv_c_b.html", "class_fv_c_b" ],
    [ "golden_ratio_hyperbola", "classgolden__ratio__hyperbola.html", "classgolden__ratio__hyperbola" ],
    [ "grimm_soybean_flowering", "classgrimm__soybean__flowering.html", "classgrimm__soybean__flowering" ],
    [ "grimm_soybean_flowering_calculator", "classgrimm__soybean__flowering__calculator.html", "classgrimm__soybean__flowering__calculator" ],
    [ "harmonic_energy", "classharmonic__energy.html", "classharmonic__energy" ],
    [ "harmonic_oscillator", "classharmonic__oscillator.html", "classharmonic__oscillator" ],
    [ "hyperbola_2d", "classhyperbola__2d.html", "classhyperbola__2d" ],
    [ "incident_shortwave_from_ground_par", "classincident__shortwave__from__ground__par.html", "classincident__shortwave__from__ground__par" ],
    [ "leaf_gbw_nikolov", "classleaf__gbw__nikolov.html", "classleaf__gbw__nikolov" ],
    [ "leaf_gbw_thornley", "classleaf__gbw__thornley.html", "classleaf__gbw__thornley" ],
    [ "leaf_shape_factor", "classleaf__shape__factor.html", "classleaf__shape__factor" ],
    [ "leaf_water_stress_exponential", "classleaf__water__stress__exponential.html", "classleaf__water__stress__exponential" ],
    [ "light_from_solar", "classlight__from__solar.html", "classlight__from__solar" ],
    [ "Light_model", "struct_light__model.html", "struct_light__model" ],
    [ "Light_profile", "struct_light__profile.html", "struct_light__profile" ],
    [ "linear_vmax_from_leaf_n", "classlinear__vmax__from__leaf__n.html", "classlinear__vmax__from__leaf__n" ],
    [ "magic_clock", "classmagic__clock.html", "classmagic__clock" ],
    [ "Module_1", "class_module__1.html", "class_module__1" ],
    [ "Module_2", "class_module__2.html", "class_module__2" ],
    [ "Module_3", "class_module__3.html", "class_module__3" ],
    [ "module_wrapper_factory", "classmodule__wrapper__factory.html", null ],
    [ "multilayer_canopy_integrator", "classmultilayer__canopy__integrator.html", "classmultilayer__canopy__integrator" ],
    [ "multilayer_canopy_photosynthesis", "classmultilayer__canopy__photosynthesis.html", "classmultilayer__canopy__photosynthesis" ],
    [ "multilayer_canopy_properties", "classmultilayer__canopy__properties.html", "classmultilayer__canopy__properties" ],
    [ "night_and_day_trackers", "classnight__and__day__trackers.html", "classnight__and__day__trackers" ],
    [ "nitroParms", "structnitro_parms.html", "structnitro_parms" ],
    [ "no_leaf_resp_neg_assim_partitioning_growth_calculator", "classno__leaf__resp__neg__assim__partitioning__growth__calculator.html", "classno__leaf__resp__neg__assim__partitioning__growth__calculator" ],
    [ "no_leaf_resp_partitioning_growth_calculator", "classno__leaf__resp__partitioning__growth__calculator.html", "classno__leaf__resp__partitioning__growth__calculator" ],
    [ "nr_ex", "classnr__ex.html", "classnr__ex" ],
    [ "one_layer_soil_profile", "classone__layer__soil__profile.html", "classone__layer__soil__profile" ],
    [ "one_layer_soil_profile_derivatives", "classone__layer__soil__profile__derivatives.html", "classone__layer__soil__profile__derivatives" ],
    [ "oscillator_clock_calculator", "classoscillator__clock__calculator.html", "classoscillator__clock__calculator" ],
    [ "parameter_calculator", "classparameter__calculator.html", "classparameter__calculator" ],
    [ "partitioning_coefficient_logistic", "classpartitioning__coefficient__logistic.html", "classpartitioning__coefficient__logistic" ],
    [ "partitioning_coefficient_selector", "classpartitioning__coefficient__selector.html", "classpartitioning__coefficient__selector" ],
    [ "partitioning_growth", "classpartitioning__growth.html", "classpartitioning__growth" ],
    [ "partitioning_growth_calculator", "classpartitioning__growth__calculator.html", "classpartitioning__growth__calculator" ],
    [ "penman_monteith_leaf_temperature", "classpenman__monteith__leaf__temperature.html", "classpenman__monteith__leaf__temperature" ],
    [ "penman_monteith_transpiration", "classpenman__monteith__transpiration.html", "classpenman__monteith__transpiration" ],
    [ "phase_clock", "classphase__clock.html", "classphase__clock" ],
    [ "poincare_clock", "classpoincare__clock.html", "classpoincare__clock" ],
    [ "pokhilko_circadian_clock", "classpokhilko__circadian__clock.html", "classpokhilko__circadian__clock" ],
    [ "priestley_transpiration", "classpriestley__transpiration.html", "classpriestley__transpiration" ],
    [ "rasmussen_specific_heat", "classrasmussen__specific__heat.html", "classrasmussen__specific__heat" ],
    [ "rd_str", "structrd__str.html", "structrd__str" ],
    [ "rh_to_mole_fraction", "classrh__to__mole__fraction.html", "classrh__to__mole__fraction" ],
    [ "rue_leaf_photosynthesis", "classrue__leaf__photosynthesis.html", "classrue__leaf__photosynthesis" ],
    [ "rue_str", "structrue__str.html", "structrue__str" ],
    [ "senescence_coefficient_logistic", "classsenescence__coefficient__logistic.html", "classsenescence__coefficient__logistic" ],
    [ "senescence_logistic", "classsenescence__logistic.html", "classsenescence__logistic" ],
    [ "seqRD_str", "structseq_r_d__str.html", "structseq_r_d__str" ],
    [ "shortwave_atmospheric_scattering", "classshortwave__atmospheric__scattering.html", "classshortwave__atmospheric__scattering" ],
    [ "soil_evaporation", "classsoil__evaporation.html", "classsoil__evaporation" ],
    [ "soil_type_selector", "classsoil__type__selector.html", "classsoil__type__selector" ],
    [ "soilML_str", "structsoil_m_l__str.html", "structsoil_m_l__str" ],
    [ "soilText_str", "structsoil_text__str.html", "structsoil_text__str" ],
    [ "solar_position_michalsky", "classsolar__position__michalsky.html", "classsolar__position__michalsky" ],
    [ "song_flowering", "classsong__flowering.html", "classsong__flowering" ],
    [ "soybean_development_rate_calculator", "classsoybean__development__rate__calculator.html", "classsoybean__development__rate__calculator" ],
    [ "stomata_water_stress_exponential", "classstomata__water__stress__exponential.html", "classstomata__water__stress__exponential" ],
    [ "stomata_water_stress_linear", "classstomata__water__stress__linear.html", "classstomata__water__stress__linear" ],
    [ "stomata_water_stress_linear_and_aba_response", "classstomata__water__stress__linear__and__aba__response.html", "classstomata__water__stress__linear__and__aba__response" ],
    [ "stomata_water_stress_sigmoid", "classstomata__water__stress__sigmoid.html", "classstomata__water__stress__sigmoid" ],
    [ "ten_layer_c3_canopy", "classten__layer__c3__canopy.html", "classten__layer__c3__canopy" ],
    [ "ten_layer_c4_canopy", "classten__layer__c4__canopy.html", "classten__layer__c4__canopy" ],
    [ "ten_layer_canopy_integrator", "classten__layer__canopy__integrator.html", "classten__layer__canopy__integrator" ],
    [ "ten_layer_canopy_properties", "classten__layer__canopy__properties.html", "classten__layer__canopy__properties" ],
    [ "ten_layer_rue_canopy", "classten__layer__rue__canopy.html", "classten__layer__rue__canopy" ],
    [ "thermal_time_and_frost_senescence", "classthermal__time__and__frost__senescence.html", "classthermal__time__and__frost__senescence" ],
    [ "thermal_time_beta", "classthermal__time__beta.html", "classthermal__time__beta" ],
    [ "thermal_time_bilinear", "classthermal__time__bilinear.html", "classthermal__time__bilinear" ],
    [ "thermal_time_development_rate_calculator", "classthermal__time__development__rate__calculator.html", "classthermal__time__development__rate__calculator" ],
    [ "thermal_time_linear", "classthermal__time__linear.html", "classthermal__time__linear" ],
    [ "thermal_time_linear_extended", "classthermal__time__linear__extended.html", "classthermal__time__linear__extended" ],
    [ "thermal_time_senescence", "classthermal__time__senescence.html", "classthermal__time__senescence" ],
    [ "thermal_time_trilinear", "classthermal__time__trilinear.html", "classthermal__time__trilinear" ],
    [ "total_biomass", "classtotal__biomass.html", "classtotal__biomass" ],
    [ "two_layer_soil_profile", "classtwo__layer__soil__profile.html", "classtwo__layer__soil__profile" ],
    [ "water_vapor_properties_from_air_temperature", "classwater__vapor__properties__from__air__temperature.html", "classwater__vapor__properties__from__air__temperature" ],
    [ "ws_str", "structws__str.html", "structws__str" ]
];